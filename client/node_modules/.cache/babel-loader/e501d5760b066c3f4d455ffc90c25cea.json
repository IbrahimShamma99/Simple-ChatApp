{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/ibrahim/Repos/react-realtime-chat/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/ibrahim/Repos/react-realtime-chat/client/src/components/dashboard/sidebar/GroupList.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    height:80%;\\n    width:100%;\\n    overflow-y: scroll;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport GroupItem from './GroupItem';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchGroups } from '../../../actions/groupActions';\nimport styled from 'styled-components';\nconst GroupWrapper = styled.div(_templateObject());\n\nclass Groups extends Component {\n  componentDidMount() {\n    console.log(\"Props\", this.props);\n    this.props.fetchGroups();\n  }\n\n  render() {\n    const groupsReducer = this.props.groupsReducer;\n    const groups = groupsReducer.groups;\n    if (groups.length === 0) return React.createElement(GroupWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    });\n    return React.createElement(GroupWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, groups.map(group => {\n      return React.createElement(GroupItem, {\n        key: group._id,\n        group: group,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      });\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  groupsReducer: state.groups\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    fetchGroups: fetchGroups\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Groups);","map":{"version":3,"sources":["/home/ibrahim/Repos/react-realtime-chat/client/src/components/dashboard/sidebar/GroupList.js"],"names":["React","Component","GroupItem","connect","bindActionCreators","fetchGroups","styled","GroupWrapper","div","Groups","componentDidMount","console","log","props","render","groupsReducer","groups","length","map","group","_id","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,YAAY,GAAGD,MAAM,CAACE,GAAV,mBAAlB;;AAOA,MAAMC,MAAN,SAAqBR,SAArB,CAA+B;AAC3BS,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoB,KAAKC,KAAzB;AACA,SAAKA,KAAL,CAAWR,WAAX;AACH;;AACDS,EAAAA,MAAM,GAAG;AAAA,UACEC,aADF,GACmB,KAAKF,KADxB,CACEE,aADF;AAEL,UAAMC,MAAM,GAAGD,aAAa,CAACC,MAA7B;AACA,QAAGA,MAAM,CAACC,MAAP,KAAkB,CAArB,EAAwB,OAAO,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACxB,WACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,MAAM,CAACE,GAAP,CAAWC,KAAK,IAAI;AACjB,aAAO,oBAAC,SAAD;AAAW,QAAA,GAAG,EAAEA,KAAK,CAACC,GAAtB;AAA2B,QAAA,KAAK,EAAED,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFA,CADL,CADJ;AAOH;;AAhB0B;;AAkB/B,MAAME,eAAe,GAAIC,KAAD,KAAY;AAChCP,EAAAA,aAAa,EAAEO,KAAK,CAACN;AADW,CAAZ,CAAxB;;AAGA,MAAMO,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAOpB,kBAAkB,CAAC;AAACC,IAAAA,WAAW,EAAEA;AAAd,GAAD,EAA4BmB,QAA5B,CAAzB;AACH,CAFD;;AAIA,eAAerB,OAAO,CAACkB,eAAD,EAAiBE,kBAAjB,CAAP,CAA4Cd,MAA5C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport GroupItem from './GroupItem';\nimport {connect} from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchGroups } from '../../../actions/groupActions';\nimport styled from 'styled-components';\n\nconst GroupWrapper = styled.div`\n    height:80%;\n    width:100%;\n    overflow-y: scroll;\n`;\n\n\nclass Groups extends Component {\n    componentDidMount() {\n        console.log(\"Props\",this.props);\n        this.props.fetchGroups();\n    }\n    render() {\n        const {groupsReducer} = this.props\n        const groups = groupsReducer.groups;\n        if(groups.length === 0) return <GroupWrapper />\n        return (\n            <GroupWrapper>\n                {groups.map(group => {\n                    return <GroupItem key={group._id} group={group}  />\n                })}\n            </GroupWrapper>\n        )\n    }\n}\nconst mapStateToProps = (state) => ({\n    groupsReducer: state.groups\n})\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({fetchGroups: fetchGroups},dispatch)\n}   \n\nexport default connect(mapStateToProps,mapDispatchToProps)(Groups);"]},"metadata":{},"sourceType":"module"}