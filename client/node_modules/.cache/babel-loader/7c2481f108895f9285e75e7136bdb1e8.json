{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/ibrahim/Repos/Simple-ChatApp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/ibrahim/Repos/Simple-ChatApp/client/src/components/dashboard/sidebar/GroupItem.js\";\n\nfunction _templateObject5() {\n  const data = _taggedTemplateLiteral([\"\\n  font-size: 0.8em;\\n  text-align: start;\\n\"]);\n\n  _templateObject5 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n  font-size: 1em;\\n  text-align: start;\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  height: 75%;\\n  width: 82%;\\n  margin-left: 3%;\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 50px;\\n  height: 50px;\\n  border-radius: 50%;\\n  border: none;\\n  background-color: #000;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 80px;\\n  background: gray;\\n  padding: 10px;\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  cursor: pointer;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setSelectedGroupId } from '../../../actions/groupActions';\nconst ItemWrapper = styled.div(_templateObject());\nconst StyledGroupImage = styled.div(_templateObject2());\nconst StyledGroupTextBox = styled.div(_templateObject3());\nconst StyledGroupTitle = styled.h2(_templateObject4());\nconst StyledGroupMessage = styled.h4(_templateObject5());\n\nclass GroupItem extends Component {\n  render() {\n    const group = this.props.group;\n    return React.createElement(ItemWrapper, {\n      onClick: e => this.props.setSelectedGroupId(group._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(StyledGroupImage, {\n      src: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(StyledGroupTextBox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(StyledGroupTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, group.name), React.createElement(StyledGroupMessage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, group.lastMessage)));\n  }\n\n}\n\nGroupItem.propTypes = {\n  group: PropTypes.object\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setSelectedGroupId: groupId => dispatch(setSelectedGroupId(groupId))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(GroupItem);","map":{"version":3,"sources":["/home/ibrahim/Repos/Simple-ChatApp/client/src/components/dashboard/sidebar/GroupItem.js"],"names":["React","Component","styled","PropTypes","connect","setSelectedGroupId","ItemWrapper","div","StyledGroupImage","StyledGroupTextBox","StyledGroupTitle","h2","StyledGroupMessage","h4","GroupItem","render","group","props","e","_id","name","lastMessage","propTypes","object","mapDispatchToProps","dispatch","groupId"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,+BAAnC;AAEA,MAAMC,WAAW,GAAGJ,MAAM,CAACK,GAAV,mBAAjB;AAWA,MAAMC,gBAAgB,GAAGN,MAAM,CAACK,GAAV,oBAAtB;AAQA,MAAME,kBAAkB,GAAGP,MAAM,CAACK,GAAV,oBAAxB;AAMA,MAAMG,gBAAgB,GAAGR,MAAM,CAACS,EAAV,oBAAtB;AAKA,MAAMC,kBAAkB,GAAGV,MAAM,CAACW,EAAV,oBAAxB;;AAIA,MAAMC,SAAN,SAAwBb,SAAxB,CAAkC;AAIhCc,EAAAA,MAAM,GAAG;AAAA,UACCC,KADD,GACW,KAAKC,KADhB,CACCD,KADD;AAEP,WACE,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAEE,CAAC,IAAI,KAAKD,KAAL,CAAWZ,kBAAX,CAA8BW,KAAK,CAACG,GAApC,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,gBAAD;AAAkB,MAAA,GAAG,EAAC,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBH,KAAK,CAACI,IAAzB,CADF,EAEE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqBJ,KAAK,CAACK,WAA3B,CAFF,CAFF,CADF;AASD;;AAf+B;;AAA5BP,S,CACGQ,S,GAAY;AACjBN,EAAAA,KAAK,EAAEb,SAAS,CAACoB;AADA,C;;AAiBrB,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLpB,IAAAA,kBAAkB,EAAEqB,OAAO,IAAID,QAAQ,CAACpB,kBAAkB,CAACqB,OAAD,CAAnB;AADlC,GAAP;AAGD,CAJD;;AAMA,eAAetB,OAAO,CACpB,IADoB,EAEpBoB,kBAFoB,CAAP,CAGbV,SAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setSelectedGroupId } from '../../../actions/groupActions';\n\nconst ItemWrapper = styled.div`\n  width: 100%;\n  height: 80px;\n  background: gray;\n  padding: 10px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  cursor: pointer;\n`;\n\nconst StyledGroupImage = styled.div`\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  border: none;\n  background-color: #000;\n`;\n\nconst StyledGroupTextBox = styled.div`\n  height: 75%;\n  width: 82%;\n  margin-left: 3%;\n`;\n\nconst StyledGroupTitle = styled.h2`\n  font-size: 1em;\n  text-align: start;\n`;\n\nconst StyledGroupMessage = styled.h4`\n  font-size: 0.8em;\n  text-align: start;\n`;\nclass GroupItem extends Component {\n  static propTypes = {\n    group: PropTypes.object\n  };\n  render() {\n    const { group } = this.props;\n    return (\n      <ItemWrapper onClick={e => this.props.setSelectedGroupId(group._id)}>\n        <StyledGroupImage src=\"\" />\n        <StyledGroupTextBox>\n          <StyledGroupTitle>{group.name}</StyledGroupTitle>\n          <StyledGroupMessage>{group.lastMessage}</StyledGroupMessage>\n        </StyledGroupTextBox>\n      </ItemWrapper>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setSelectedGroupId: groupId => dispatch(setSelectedGroupId(groupId))\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(GroupItem);\n"]},"metadata":{},"sourceType":"module"}