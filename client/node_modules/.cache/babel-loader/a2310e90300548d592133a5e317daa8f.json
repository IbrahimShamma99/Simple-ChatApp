{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/ibrahim/Repos/Simple-ChatApp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/ibrahim/Repos/Simple-ChatApp/client/src/components/dashboard/modals/CreateGroupModal.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    background-color: #F7F9FA;\\n    padding:10px;\\n    color: #4b5961;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Modal } from 'reactstrap';\nimport { showCreateGroupModal, createGroup } from '../../../actions/groupActions';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport styled from 'styled-components';\nconst StyledWrapper = styled.div(_templateObject());\n\nclass CreateGroupModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = () => {\n      this.props.createGroup(this.state.group_name);\n    };\n  }\n\n  render() {\n    const group = this.props.group;\n    return React.createElement(Modal, {\n      isOpen: group.isShowingCreateModal,\n      toggle: () => this.props.showCreateGroupModal(!group.isShowingCreateModal),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(StyledWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Create Group\"), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"exampleEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Enter Group Name\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"group_name\",\n      id: \"group_name\",\n      onChange: this.onChange,\n      placeholder: \"Enter Group Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }))), React.createElement(Button, {\n      onClick: () => this.onSubmit(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    group: state.groups\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    showCreateGroupModal: isHowing => dispatch(showCreateGroupModal(isHowing)),\n    createGroup: name => dispatch(createGroup(name))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateGroupModal);","map":{"version":3,"sources":["/home/ibrahim/Repos/Simple-ChatApp/client/src/components/dashboard/modals/CreateGroupModal.js"],"names":["React","Component","connect","Modal","showCreateGroupModal","createGroup","Button","Form","FormGroup","Label","Input","styled","StyledWrapper","div","CreateGroupModal","state","onChange","e","setState","target","name","value","onSubmit","props","group_name","render","group","isShowingCreateModal","mapStateToProps","groups","mapDispatchToProps","dispatch","isHowing"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,KAAR,QAAoB,YAApB;AACA,SAAQC,oBAAR,EAA8BC,WAA9B,QAAgD,+BAAhD;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,SAAvB,EAAkCC,KAAlC,EAAyCC,KAAzC,QAAsD,YAAtD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,aAAa,GAAGD,MAAM,CAACE,GAAV,mBAAnB;;AAMA,MAAMC,gBAAN,SAA+Bb,SAA/B,CAAyC;AAAA;AAAA;AAAA,SAErCc,KAFqC,GAE7B,EAF6B;;AAAA,SAMrCC,QANqC,GAMzBC,CAAD,IAAO;AACd,WAAKC,QAAL,CAAc;AACV,SAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAkBH,CAAC,CAACE,MAAF,CAASE;AADjB,OAAd;AAGH,KAVoC;;AAAA,SAYrCC,QAZqC,GAY1B,MAAM;AACb,WAAKC,KAAL,CAAWlB,WAAX,CAAuB,KAAKU,KAAL,CAAWS,UAAlC;AACH,KAdoC;AAAA;;AAgBrCC,EAAAA,MAAM,GAAG;AAAA,UACEC,KADF,GACW,KAAKH,KADhB,CACEG,KADF;AAGL,WACI,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAEA,KAAK,CAACC,oBAArB;AAA2C,MAAA,MAAM,EAAE,MAAM,KAAKJ,KAAL,CAAWnB,oBAAX,CAAgC,CAACsB,KAAK,CAACC,oBAAvC,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,EAEC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,YAAxB;AAAqC,MAAA,EAAE,EAAC,YAAxC;AAAqD,MAAA,QAAQ,EAAE,KAAKX,QAApE;AAA8E,MAAA,WAAW,EAAC,kBAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADR,CAFD,EASK,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKM,QAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATL,CADH,CADJ;AAeH;;AAlCoC;;AAqCzC,MAAMM,eAAe,GAAGb,KAAK,IAAI;AAC7B,SAAO;AACHW,IAAAA,KAAK,EAAGX,KAAK,CAACc;AADX,GAAP;AAGH,CAJD;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACH3B,IAAAA,oBAAoB,EAAI4B,QAAD,IAAcD,QAAQ,CAAC3B,oBAAoB,CAAC4B,QAAD,CAArB,CAD1C;AAEH3B,IAAAA,WAAW,EAAIe,IAAD,IAAUW,QAAQ,CAAC1B,WAAW,CAACe,IAAD,CAAZ;AAF7B,GAAP;AAIH,CALD;;AAOA,eAAelB,OAAO,CAAC0B,eAAD,EAAiBE,kBAAjB,CAAP,CAA4ChB,gBAA5C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport {Modal} from 'reactstrap'\nimport {showCreateGroupModal, createGroup} from '../../../actions/groupActions'\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport styled from 'styled-components'\n\nconst StyledWrapper = styled.div`\n    background-color: #F7F9FA;\n    padding:10px;\n    color: #4b5961;\n`;\n\nclass CreateGroupModal extends Component {\n    \n    state = {\n\n    }\n\n    onChange = (e) => {\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    }\n\n    onSubmit = () => {\n        this.props.createGroup(this.state.group_name)\n    }\n\n    render() {\n        const {group} = this.props;\n        \n        return (\n            <Modal isOpen={group.isShowingCreateModal} toggle={() => this.props.showCreateGroupModal(!group.isShowingCreateModal)}>\n               <StyledWrapper>\n                <h2>Create Group</h2>\n                <Form>\n                        <FormGroup>\n                            <Label for=\"exampleEmail\">Enter Group Name</Label>\n                            <Input type=\"text\" name=\"group_name\" id=\"group_name\" onChange={this.onChange} placeholder=\"Enter Group Name\" />\n                        </FormGroup>\n                        \n                    </Form>\n                    <Button onClick={() => this.onSubmit()}>Submit</Button>\n               </StyledWrapper>     \n            </Modal>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        group : state.groups\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        showCreateGroupModal : (isHowing) => dispatch(showCreateGroupModal(isHowing)),\n        createGroup : (name) => dispatch(createGroup(name))\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateGroupModal)"]},"metadata":{},"sourceType":"module"}